apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'

version = '0.1'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:servlet-api:2.5'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'log4j:log4j:1.2.17'
    compile 'org.freemarker:freemarker:2.3.20'
    
    testCompile "junit:junit:4.9"
    testCompile "com.amazonaws:aws-java-sdk:1.5.3"
}

eclipse {
    classpath {
        containers.clear()
        containers.add('org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6')
        containers.add('org.eclipse.jst.j2ee.internal.web.container')
    }
}

task wsdl2java (type:Exec) {
    dependencies{
	   	// runtime 'org.apache.cxf:apache-cxf:2.7.5'
	}
    
    //For Linux
    //commandLine './pack'
    //For Windows
	commandLine 'cmd','/c', 'pack.bat'
}

task packStub(type: Jar/*, dependsOn: wsdl2java*/) {
	//from 'src/main/java/com/tlswe/awsmock/ec2/cxf_generated'
	into 'libs/cxf-stub-ec2-2013-02-01.jar'
}

sourceSets {
    test
}

task sourcesJar(type:Jar, dependsOn:classes){
    classifier = 'sources'
    // from sourceSets.main.allSource
    from sourceSets.main.allJava.srcDirs
    include "**/*.java"
}

task javadocJar(type: Jar) {
        classifier = "javadoc"
        from javadoc
    }

task integrationTest(type: Test) {
    doFirst {
        jettyRun.httpPort = 8000    // Port for test
        jettyRun.daemon = true
        jettyRun.execute()
    }
    doLast {
        jettyStop.stopPort = 8091   // Port for stop signal
        jettyStop.stopKey = 'stopKey'
        jettyStop.execute()
    }
    testClassesDir = sourceSets.test.output.classesDir
}

task run(dependsOn: classes) {
    jettyRun.httpPort = 8000    // Port for test
    jettyRun.daemon = true
    jettyRun.execute()
}

task test(overwrite: true, type: Test, dependsOn: run) {
    testClassesDir = sourceSets.test.output.classesDir
}

task stop(dependsOn: run) {
    jettyStop.stopPort = 8091   // Port for stop signal
    jettyStop.stopKey = 'stopKey'
    jettyStop.execute()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jar {
    exclude('log4j.properties')
}


