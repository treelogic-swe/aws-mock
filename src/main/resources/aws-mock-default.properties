# class name for objects of mock ec2 instances to be in running aws-mock, should be a sub-class that extends com.tlswe.awsmock.ec2.model.MockEc2Instance
ec2.instance.class=com.tlswe.awsmock.ec2.model.DefaultMockEc2Instance

ec2.placement=us-mock-1

# the xml namespace that matches the original wsdl from which we generate the web service stubs
xmlns.current=http://ec2.amazonaws.com/doc/2013-02-01/

# the api version that matches the original wsdl from which we generate the web service stubs
ec2.api.version.current.impl=2013-02-01

# switch that enables compatibility for working with specified api version for elasticfox
elasticfox.compatible=true
ec2.api.version.elasticfox=2010-11-15

# predefined AMIs
predefined.mock.ami.1=ami-12345678
predefined.mock.ami.2=ami-00abcdef
predefined.mock.ami.3=ami-88888888

# min/max boot/shutdown time (in seconds) for a mock ec2 instance
instance.min.boot.time.seconds=15
instance.max.boot.time.seconds=30
instance.min.shutdown.time.seconds=6
instance.max.shutdown.time.seconds=20

# min/max boot/shutdown time (in milliseconds) for a mock ec2 instance
# Setting time in ms has precedence to seconds
# instance.min.boot.time=15000
# instance.max.boot.time=30000
# instance.min.shutdown.time=6000
# instance.max.shutdown.time=20000

# simple file based persistence (only save on context stopping and load on context starting)
persistence.enabled=false
# point to the target file to which you would like to make runtime objects persistent
persistence.store.file=/path/to/aws-mock.save

# network related information
vpcId=vpc-6e6eb509
subnetId=subnet-0b763521
privateIpAddress=172.31.55.149
sourcePort=80
destPort=80
routeTableId=rtb-45c3e522
internetGatewayId=igw-6bbde20f
securityGroupId=sg-96e961ed
securityOwnerId=391387808006
securityGroupName=cell-manager-security-group
ipProtocol=tcp
vpcState=available
cidrBlock=172.31.0.0/16