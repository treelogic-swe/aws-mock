apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.treelogic-swe'
version = '1.0.6'
ext.packaging = 'jar'

def ec2ApiVersion = "ec2-2014-02-01"
def stubJarFilename = "cxf-stub-" + ec2ApiVersion + ".jar"

def cloudwatchApiVersion = "cloudwatch-2010-08-01"

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations { cxf }

ext {
    cxfVersion = '3.0.4'
    cxfArtifacts = [
        'cxf-tools-wsdlto-frontend-jaxws',
        'cxf-tools-wsdlto-databinding-jaxb',
        'cxf-tools-common',
        'cxf-tools-wsdlto-core'
    ]
}

dependencies {
    cxfArtifacts.each { artifact -> cxf "org.apache.cxf:$artifact:$cxfVersion" }
    runtime 'javax.xml.ws:jaxws-api:2.2.6'
}

task wsdl2java (type: JavaExec) {
    inputs.file file('ec2-2014-02-01.wsdl')
    outputs.dir new File('build', 'stub_src')
    
    main = 'org.apache.cxf.tools.wsdlto.WSDLToJava'
    classpath = configurations.cxf + configurations.runtimeClasspath
    args = [ "-quiet", "-d", "build/stub_src", "-p", "com.tlswe.awsmock.ec2.cxf_generated", "-autoNameResolution", "-impl", "-server", "-frontend", "jaxws21", ec2ApiVersion+".wsdl" ]
}

task cloudwatchwsdl2java (type: JavaExec) {
    inputs.file file('cloudwatch-2010-08-01.wsdl')
    outputs.dir new File('build', 'stub_src')

    main = 'org.apache.cxf.tools.wsdlto.WSDLToJava'
    classpath = configurations.cxf + configurations.runtimeClasspath
    args = [ "-quiet", "-d", "build/stub_src", "-p", "com.tlswe.awsmock.cloudwatch.cxf_generated", "-autoNameResolution", "-impl", "-server", "-frontend", "jaxws21", cloudwatchApiVersion+".wsdl" ]
}

// remove default dependency of 'classes' to avoid circular dependency
wsdl2java.dependsOn=[]
cloudwatchwsdl2java.dependsOn=[]

compileJava {
    dependsOn wsdl2java, cloudwatchwsdl2java
    inputs.dir new File('build', 'stub_src')
    outputs.dir new File('build', 'stub_classes')
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    classpath = configurations.runtime
    source = file ('build/stub_src')
    destinationDir = file ('build/stub_classes')
}

jar {
    inputs.dir new File('build', 'stub_classes')
    manifest.attributes provider: 'tlswe'
    from 'build/stub_classes' // ,'build/stub_src'
}

javadoc {
    // commented and don't output javadoc because no javadoc needed for generated code 
    // source 'build/stub_src'
}

//task cxfStubJarClean (type: Delete) {
//    delete '../libs/' + stubJarFilename
//}

task sourcesJar(type:Jar){
    classifier = 'sources'
    from 'build/stub_src'
}

task javadocJar(type: Jar) {
    classifier = "javadoc"
    from javadoc
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

// We comment the signing task for avoiding travis-ci build failure 
// because we don't commit secret key for signing jars to github.com.
//signing {
//    sign configurations.archives
//}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment)  }
 
            // for publishing to local folder - for normal travis-ci builds
            repository(url: "file:/tmp/tlswe/repo")

            // for publishing to public maven repo - for manually releasing to maven repo
            //repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            //  authentication(userName: sonatypeUsername, password: sonatypePassword)
            //}

            pom.project {
               name 'cxf-stub'
               packaging 'jar'
               description 'Java API port of AWS WSDL by Apache CXF.'
               url 'https://github.com/treelogic-swe/aws-mock'
 
               scm {
                   url 'scm:git@github.com:treelogic-swe/aws-mock.git'
                   connection 'scm:git@github.com:treelogic-swe/aws-mock.git'
                   developerConnection 'scm:git@github.com:treelogic-swe/aws-mock.git'
               }
 
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                        id 'christopherbalz'
                        name 'Christopher Balz'
                        email 'christopherbalz@yahoo.com'
                    }
                    developer {
                        id 'maxiaohao'
                        name 'Ma Xiaohao'
                        email 'maxiaohao@gmail.com'
                    }
                    developer {
                        id 'deathspeeder'
                        name 'Wang Jun'
                        email 'deathspeeder@gmail.com'
                    }
                    developer {
                        id 'Jayscrivner'
                        name 'Jay Scrivner'
                        email 'Jayscrivner@gmail.com'
                    }
                    developer {
                        id 'lhcxx'
                        name 'Lu Huichun'
                        email 'lhcxx0508@gmail.com'
                    }
                    developer {
                        id 'zkareem'
                        name 'Zaki Kareem'
                        email 'zakimak9@gmail.com'
                    }
               }
            }
            
        }  
    }
}

